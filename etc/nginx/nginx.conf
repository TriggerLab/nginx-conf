worker_processes  1;

events {
    worker_connections  1024;
}

http {
    server {
        listen              443 ssl;
        server_name         <<REPLACE>>;

        ssl_session_timeout 1d;
        ssl_session_cache   shared:SSL:50m;

        ssl_certificate     <<REPLACE>>; # use strong signature algorithm (e.g. sha256)
        ssl_certificate_key <<REPLACE>>; # use strong key (e.g. 2048- or 4096 bit)
        ssl_dhparam         <<REPLACE>>; # use... (TODO)

        ssl_session_tickets off; # I don't like this feature...

        ssl_protocols TLSv1.2;
        ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL'; # optimized for security NOT for compatibility
        ssl_prefer_server_ciphers on;

        # HTTP Strict Transport Security (HSTS) -- 15768000 seconds = 6 months
        add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
        # HTTP Pubic Key Pinning (HPKP) -- 7200 seconds = 2 hours (TODO)
        add_header Public-Key-Pins 'pin-sha256="<<REPLACE>>"; max-age=7200; includeSubdomains';
        # OWASP recommendations
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-Xss-Protection "1; mode=block" always;
        # Content-Security-Policy (TODO)
        add_header Content-Security-Policy "default-src 'self'";

        # TODO: Make server fingerprinting more difficult e.g. remove http server header

        # OCSP Stapling (TODO)
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # ssl_trusted_certificate <<REPLACE>>;

        # resolver <<REPLACE>>;

        location / {
            root /srv/http;
            index index.html;
        }
    }

    # redirect all http traffic to https
    server {
        listen 80;
        server_name <<REPLACE>>;
        return 301 https://$host$request_uri;
    }
}
